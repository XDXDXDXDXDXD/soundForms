doctype html
html
	head
		title=title
		meta(http-equiv='Content-Type', content='text/html; charset=utf-8')
		meta(name='viewport', content='width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0')
		// Le css
		link(rel='stylesheet', href='/css/style.css')
	body
		block content

	// Les javascripts
	script(src='/socket.io/socket.io.js')
	script(src='js/three.min.js')
	script(src='js/stereo.plug.js')
	script(src='js/orientation.plug.js')
	script(src='js/orbit.plug.js')
	script(src='js/stats.gui.js')
	script(src='js/dat.gui.min.js')
	script(src='js/fps.plug.js')

	//Shader code
	script(type="x-shader/x-vertex", id="vertexShader").
		varying vec3 vWorldPosition;
		void main() {
			vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
			vWorldPosition = worldPosition.xyz;
			gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);

		}
	script(type="x-shader/x-fragment", id="fragmentShader").
		uniform vec3 topColor;
		uniform vec3 bottomColor;
		uniform float offset;
		uniform float exponent;
		varying vec3 vWorldPosition;
		void main() {
			float h = normalize(vWorldPosition + offset).y;
			gl_FragColor = vec4(mix(bottomColor, topColor, max(pow(max(h, 0.0), exponent), 0.0)), 1.0);
		}

	script(src='/js/main.app.js')
